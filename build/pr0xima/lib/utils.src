Proxima.utils={}
Proxima.utils.message={}
Proxima.utils.message.colorize=function(txt,color)
return "<color="+color+">"+txt+"</color>"
end function
Proxima.utils.message.info=function(txt)
return self.colorize("[i] "+txt,"#0091FF")
end function
Proxima.utils.message.progress=function(txt)
return self.colorize("[*] "+txt,"#00FFBB")
end function
Proxima.utils.message.warning=function(txt)
return self.colorize("[!] "+txt,"#FFDD00")
end function
Proxima.utils.message.error=function(txt)
return self.colorize("[!] "+txt,"#FF1548")
end function
Proxima.utils.message.success=function(txt)
return self.colorize("[+] "+txt,"#08FF57")
end function
Proxima.utils.display_list=function(header_list,content_list)
max_lengths=[]
for i in header_list
max_len=i.len
for row in content_list
if row[header_list.indexOf(i)].len>max_len then max_len=row[header_list.indexOf(i)].len
end for
max_lengths.push(max_len)
end for
pad_right=function(str,length)
padding=" "*(length-str.len)
return str+padding
end function
separator="+"
header_row="|"
for i in header_list
idx=header_list.indexOf(i)
separator=separator+"-"*(max_lengths[idx]+2)+"+"
header_row=header_row+" "+pad_right(i,max_lengths[idx])+" |"
end for
print(separator)
print(header_row)
print(separator)
for row in content_list
row_str="|"
for i in header_list
idx=header_list.indexOf(i)
row_str=row_str+" "+pad_right(row[idx],max_lengths[idx])+" |"
end for
print(row_str)
print(separator)
end for
end function
Proxima.utils.has_value=function(givenList,searchValue)
hasFoundValue=false
for listItem in givenList
for key in listItem.indexes
if listItem[key]==searchValue then
hasFoundValue=true
break
end if
end for
end for
if hasFoundValue then return true else return false
end function
Proxima.utils.collect_files=function(parentDir)
all_files=[]
scan_dir=function(dir)
files=dir.get_files
if files.len>0 then
for file in files
all_files.push(file.path)
end for
end if
folders=dir.get_folders
if folders.len>0 then
for folder in folders
scan_dir(folder)
end for
end if
end function
scan_dir(parentDir)
return all_files
end function
Proxima.utils.is_local=function
if Proxima.globals.initMode=="local" then
return true
else
return false
end if
end function
Proxima.utils.throw_cli_error=function(cmdMessage=null,cmdUsage=null)
if cmdMessage!=null then
if cmdUsage!=null then
print(Proxima.utils.message.error(cmdMessage+" Usage: "+cmdUsage))
else
print(Proxima.utils.message.error(cmdMessage))
end if
else
print(Proxima.utils.message.error("Unknown command! Type <b>help</b> to list available commands."))
end if
end function