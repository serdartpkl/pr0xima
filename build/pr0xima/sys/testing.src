Proxima.testing={}
Proxima.testing.tests={}
// ------------------------------------------------------------------------------------------------------------
describe=function(testSuiteName,fn)
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>/ START_TEST_SUITE</b>","#FC8403")))
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>| TEST_SUITE_NAME: "+testSuiteName+"</b>","#FC8403")))
fn
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>\ END_TEST_SUITE</b>","#FC8403")))
end function
it=function(testName,fn)
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|-- TEST_NAME: "+testName+"</b>","#FFC466")))
fn
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|-- END_TEST</b>","#FFC466")))
end function
Matchers={}
Matchers.actualValue=null
Matchers.init=function(actualValue)
self.actualValue=actualValue
end function
Matchers.toBe=function(expectedValue)
testResult=false
if expectedValue==self.actualValue and typeof(expectedValue)==typeof(self.actualValue) then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
actualValue=self.actualValue
if actualValue==null then actualValue="NULL"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+actualValue+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: "+expectedValue+"</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.notToBe=function(notExpectedValue)
testResult=false
if notExpectedValue!=self.actualValue or typeof(notExpectedValue)!=typeof(self.actualValue) then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
actualValue=self.actualValue
if actualValue==1 then actualValue="TRUE"
if actualValue==0 then actualValue="FALSE"
if actualValue==null then actualValue="NULL"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+actualValue+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ NOT_EXPECTED_VALUE: "+notExpectedValue+"</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.toBeNull=function(expectedValue)
testResult=false
if self.actualValue==null then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
actualValue=self.actualValue
if actualValue==null then actualValue="NULL"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+actualValue+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: NULL</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.notToBeNull=function(expectedValue)
testResult=false
if self.actualValue!=null then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
actualValue=self.actualValue
if actualValue==null then actualValue="NULL"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+actualValue+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: NOT_NULL</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.toBeTruthy=function
testResult=false
if self.actualValue==true then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
toBoolean="TRUE"
if self.actualValue==0 then toBoolean="FALSE"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+toBoolean+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: TRUE</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.notToBeTruthy=function
testResult=false
if self.actualValue!=true then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
toBoolean="TRUE"
if self.actualValue==0 then toBoolean="FALSE"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+toBoolean+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: NOT_TRUE</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.toBeFalsy=function
testResult=false
if self.actualValue==false then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
toBoolean="TRUE"
if self.actualValue==0 then toBoolean="FALSE"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+toBoolean+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: FALSE</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
Matchers.notToBeFalsy=function
testResult=false
if self.actualValue!=false then
testResult=true
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: PASSED</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- TEST_RESULT: FAILED</b>","#FF1548")))
end if
toBoolean="TRUE"
if self.actualValue==0 then toBoolean="FALSE"
print(Proxima.io.addOutputEntry("<b>|------ ACTUAL_VALUE: "+toBoolean+"</b>"))
print(Proxima.io.addOutputEntry("<b>|------ EXPECTED_VALUE: NOT_FALSE</b>"))
if testResult then
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#08FF57")))
else
print(Proxima.io.addOutputEntry(Proxima.io.output.colorize("<b>|---- END_TEST_RESULT</b>","#FF1548")))
end if
end function
expect=function(actualValue)
createMatchers=new Matchers
createMatchers.init(actualValue)
return createMatchers
end function
// ------------------------------------------------------------------------------------------------------------
Proxima.testing.runTest=function(testName)
if Proxima.testing.tests.hasIndex(testName) then Proxima.testing.tests[testName]
return null
end function
Proxima.testing.runTests=function
for acquiredTest in self.tests.indexes
self.runTest(acquiredTest)
end for
end function