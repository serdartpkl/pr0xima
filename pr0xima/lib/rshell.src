Proxima.rshell = {}

Proxima.rshell.targetRShell = null
Proxima.rshell.targetRShells = []

Proxima.rshell.rshellID = 1

Proxima.rshell.loadLibRshell = function ()
    isValidLocation = false
    for location in Proxima.settings.librshellLocations
        includeLibRshell = include_lib(location)
        if includeLibRshell != null then
            self.globals.librshell = includeLibRshell
            isValidLocation = true
            break
        end if
    end for
    if isValidLocation then
        print(self.utils.message.success("<b>librshell.so</b> is loaded."))
    else
        exit(self.utils.message.error("Unable to find <b>librshell.so</b> library."))
    end if
end function

Proxima.rshell.installLibRshell = function ()
    installResult = Proxima.globals.librshell.install_service
    if installResult == 1 then
        print (Proxima.utils.message.success("Successfully installed service..."))
        startServiceResult = Proxima.globals.librshell.start_service
        if startServiceResult == 1 then
            print "Started service successfuly!"
        else
            print "Starting service failed: " + startServiceResult
        end if
    else
        print "Service installation failed: " + installResult
    end if
end function

Proxima.rshell.checkReverseShells = function ()
    self.rshellID = 1
    self.targetRShells = []
    recievedShells = rshell_server(Proxima.globals.librshell)
    for recievedShell in recievedShells
        shellMap = {}
        shellMap.id = self.rshellID
        shellMap.owner = Proxima.exploit.acquireUser(recievedShell.host_computer)
        shellMap.public_ip = recievedShell.host_computer.public_ip
        shellMap.local_ip = recievedShell.host_computer.local_ip
        self.targetRShells.push(shellMap)
        self.rshellID = self.rshellID + 1
    end for
end function