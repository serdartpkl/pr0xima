Proxima.sessions = {}

Proxima.sessions.targetSession = null
Proxima.sessions.targetSessions = []

Proxima.sessions.sessionID = 1

Proxima.sessions.createSession = function (sessionType, targetObject, targetIP)
    if Proxima.utils.mapHasValue(self.targetSessions, "targetIP", targetIP) == false then
        sessionMap = {}

        sessionMap.id = self.sessionID

        sessionMap.targetIP = targetIP

        if sessionType == 0 then
            sessionMap.targetLibrary = null
            sessionMap.targetLibraries = targetObject
            sessionMap.sessionType = 0
        else if sessionType == 1 then
            sessionMap.targetPort = null
            sessionMap.targetPorts = targetObject
            sessionMap.sessionType = 1
        end if

        sessionMap.targetExploit = null
        sessionMap.targetExploits = []

        sessionMap.targetShell = null
        sessionMap.targetShells = []

        sessionMap.targetUser = null
        sessionMap.targetUsers = []

        sessionMap.targetMail = null
        sessionMap.targetMails = []

        sessionMap.targetBank = null
        sessionMap.targetBanks = []

        sessionMap.libraryID = 1
        sessionMap.exploitID = 1
        sessionMap.userID = 1
        sessionMap.shellID = 1
        sessionMap.mailID = 1
        sessionMap.bankID = 1

        sessionMap.payloadInjection = true
        
        self.targetSessions.push(sessionMap)
        self.sessionID + 1
    else
        return null
    end if
end function

Proxima.sessions.getSession = function (sessionType, sessionID)
    acquiredSession = null
    if self.targetSessions.len > 0 then
        for targetSession in self.targetSessions
            if targetSession.sessionType == sessionType and targetSession.id == sessionID then
                acquiredSession = targetSession
                break
            end if
        end for
    else
        return null
    end if
    return acquiredSession
end function

Proxima.sessions.resetSessionValues = function (sessionType, sessionID)
    if self.getSession(sessionType, sessionID) != null then
        if sessionType == 0 then
            self.targetSessions[sessionID - 1].libraryID = 1
        else if sessionType == 1 then
            self.targetSessions[sessionID - 1].portID = 1
        end if
        self.targetSessions[sessionID - 1].exploitID = 1
        self.targetSessions[sessionID - 1].userID = 1
        self.targetSessions[sessionID - 1].shellID = 1
        self.targetSessions[sessionID - 1].mailID = 1
        self.targetSessions[sessionID - 1].bankID = 1
    else
        return null
    end if
end function

Proxima.sessions.resetSessionLists = function (sessionType, sessionID)
    if self.getSession(sessionType, sessionID) != null then
        if sessionType == 0 then
            self.targetSessions[sessionID - 1].targetLibrary = null
            self.targetSessions[sessionID - 1].targetLibraries = []
        else if sessionType == 1 then
            self.targetSessions[sessionID - 1].targetPort = null
            self.targetSessions[sessionID - 1].targetPorts = []
        end if
        self.targetSessions[sessionID - 1].targetExploit = null
        self.targetSessions[sessionID - 1].targetExploits = []
    
        self.targetSessions[sessionID - 1].targetShell = null
        self.targetSessions[sessionID - 1].targetShells = []
    
        self.targetSessions[sessionID - 1].targetUser = null
        self.targetSessions[sessionID - 1].targetUsers = []
    
        self.targetSessions[sessionID - 1].targetMail = null
        self.targetSessions[sessionID - 1].targetMails = []
    
        self.targetSessions[sessionID - 1].targetBank = null
        self.targetSessions[sessionID - 1].targetBanks = []
    else
        return null
    end if
end function

Proxima.sessions.setSessionValue = function (sessionType, sessionID, sessionKey, sessionValue)
    getSession = self.getSession(sessionType, sessionID)
    if getSession != null then
        self.targetSessions[getSession.id - 1][sessionKey] = sessionValue
    else
        return null
    end if
end function

Proxima.sessions.getSessionValue = function (sessionType, sessionID, sessionKey)
    getSession = self.getSession(sessionType, sessionID)
    if getSession != null then
        return getSession[sessionKey]
    else
        return null
    end if
end function

Proxima.sessions.setTargetSession = function (sessionID, sessionType) 
    self.targetSession = sessionID
end function