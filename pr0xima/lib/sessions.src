Proxima.sessions = {}

Proxima.sessions.targetSession = null
Proxima.sessions.sessionID = 1

Proxima.sessions.localSession = []
Proxima.sessions.remoteSessions = []

Proxima.sessions.createLocalSession = function (targetLibraries)
    if self.localSession.len == 0 then 
        localSessionMap = {}

        localSessionMap.id = 1

        localSessionMap.targetLibrary = null
        localSessionMap.targetLibraries = targetLibraries

        localSessionMap.targetExploit = null
        localSessionMap.targetExploits = []

        localSessionMap.targetShell = null
        localSessionMap.targetShells = []

        localSessionMap.targetUser = null
        localSessionMap.targetUsers = []

        localSessionMap.targetMail = null
        localSessionMap.targetMails = []

        localSessionMap.targetBank = null
        localSessionMap.targetBanks = []

        localSessionMap.libraryID = 1
        localSessionMap.exploitID = 1
        localSessionMap.userID = 1
        localSessionMap.shellID = 1
        localSessionMap.mailID = 1
        localSessionMap.bankID = 1

        localSessionMap.sessionType = 0
        localSessionMap.payloadInjection = true

        self.localSession.push(localSessionMap)
        return true
    else
        return null
    end if
end function

Proxima.sessions.createRemoteSession = function (targetIP, targetPorts)
    if Proxima.utils.mapHasValue(self.remoteSessions, targetIP) == false then
        remoteSessionMap = {}

        remoteSessionMap.id = self.sessionID

        remoteSessionMap.targetIP = targetIP
        remoteSessionMap.targetPort = null
        remoteSessionMap.targetPorts = targetPorts

        remoteSessionMap.targetExploit = null
        remoteSessionMap.targetExploits = []

        remoteSessionMap.targetShell = null
        remoteSessionMap.targetShells = []

        remoteSessionMap.targetUser = null
        remoteSessionMap.targetUsers = []

        remoteSessionMap.targetMail = null
        remoteSessionMap.targetMails = []

        remoteSessionMap.targetBank = null
        remoteSessionMap.targetBanks = []

        remoteSessionMap.portID = 1
        remoteSessionMap.exploitID = 1
        remoteSessionMap.userID = 1
        remoteSessionMap.shellID = 1
        remoteSessionMap.mailID = 1
        remoteSessionMap.bankID = 1

        remoteSessionMap.sessionType = 1
        remoteSessionMap.payloadInjection = true

        self.remoteSessions.push(remoteSessionMap)
        self.sessionID + 1
        return true
    else
        return null
    end if
end function

Proxima.sessions.getLocalSession = function ()
    return self.localSession
end function

Proxima.sessions.getRemoteSession = function (sessionID)
    acquiredSession = null
    if self.remoteSessions.len > 0 then
        for remoteSession in self.remoteSessions
            if remoteSession.id == sessionID then
                acquiredSession = remoteSession
                break
            end if
        end for
    else
        return null
    end if
    return acquiredSession
end function

Proxima.sessions.resetSessionValues = function (sessionType, sessionID)
    if sessionType == 0 then
        self.localSession.libraryID = 1
        self.localSession.exploitID = 1
        self.localSession.userID = 1
        self.localSession.shellID = 1
        self.localSession.mailID = 1
        self.localSession.bankID = 1
    else if sessionType == 1 then
        self.remoteSessions[sessionID].portID = 1
        self.remoteSessions[sessionID].exploitID = 1
        self.remoteSessions[sessionID].userID = 1
        self.remoteSessions[sessionID].shellID = 1
        self.remoteSessions[sessionID].mailID = 1
        self.remoteSessions[sessionID].bankID = 1
    end if
end function

Proxima.sessions.resetSessionLists = function (sessionType, sessionID)
    if sessionType == 0 then
        self.localSession.targetLibrary = null
        self.localSession.targetLibraries = []
    
        self.localSession.targetExploit = null
        self.localSession.targetExploits = []
    
        self.localSession.targetShell = null
        self.localSession.targetShells = []
    
        self.localSession.targetUser = null
        self.localSession.targetUsers = []
    
        self.localSession.targetMail = null
        self.localSession.targetMails = []
    
        self.localSession.targetBank = null
        self.localSession.targetBanks = []
    else if sessionType == 1 then
        self.remoteSessions[sessionID].targetIP = targetIP
        self.remoteSessions[sessionID].targetPort = null
        self.remoteSessions[sessionID].targetPorts = targetPorts
    
        self.remoteSessions[sessionID].targetExploit = null
        self.remoteSessions[sessionID].targetExploits = []
    
        self.remoteSessions[sessionID].targetShell = null
        self.remoteSessions[sessionID].targetShells = []
    
        self.remoteSessions[sessionID].targetUser = null
        self.remoteSessions[sessionID].targetUsers = []
    
        self.remoteSessions[sessionID].targetMail = null
        self.remoteSessions[sessionID].targetMails = []
    
        self.remoteSessions[sessionID].targetBank = null
        self.remoteSessions[sessionID].targetBanks = []
    end if
end function

Proxima.sessions.setSessionValue = function (sessionType, sessionID, sessionKey, sessionValue)
    if sessionType == 0 then
        self.localSession[sessionKey] = sessionValue
    else sessionType == 1 then
        if self.getRemoteSession(sessionID) != null then
            self.remoteSessions[sessionID][sessionKey] == sessionValue
            return true
        end if
    end if
end function

Proxima.sessions.getSessionValue = function (sessionType, sessionID, sessionKey)
end function

Proxima.sessions.setTargetSession = function (sessionID) 
    self.targetSession = sessionID
end function