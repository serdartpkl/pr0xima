Proxima.tests = {}
Proxima.tests.test = {}

Proxima.tests.test.db = function ()
    print(Proxima.io.addOutputEntry(Proxima.io.output.info("Starting to test database functions...")))
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    dbName = "test"

    createDatabase = Proxima.db.createDatabase(dbName)
    if createDatabase then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Created database successfully.")))
   
    getDatabases = Proxima.db.getDatabases()
    if getDatabases != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded databases successfully.")))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayDatabases()
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    getRecords = Proxima.db.getRecords(dbName)
    if getRecords != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded records successfully.")))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayRecords(dbName, "name")
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    recordMap = {"name": "test_one", "value_list": [1, 2, 3]}
    addRecord = Proxima.db.addRecord(dbName, recordMap)
    if addRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Added record 1.")))

    recordMap = {"name": "test_two", "value_list": [1, 2, 3]}
    addRecord = Proxima.db.addRecord(dbName, recordMap)
    if addRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Added record 2.")))

    recordMap = {"name": "test_thr", "value_list": [1, 2, 3]}
    addRecord = Proxima.db.addRecord(dbName, recordMap)
    if addRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Added record 3.")))

    getRecords = Proxima.db.getRecords(dbName)
    if getRecords != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded records successfully.")))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayRecords(dbName, "name")
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    
    getRecordValue = Proxima.db.getRecordValue(dbName, 1, "name")
    if getRecordValue != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Got record value: " + getRecordValue)))

    setRecordValue = Proxima.db.setRecordValue(dbName, 1, "name", "test_changed_one")
    if setRecordValue then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Changed value of record ID 1 successfully.")))

    getRecordValue = Proxima.db.getRecordValue(dbName, 1, "name")
    if getRecordValue != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Got record value: " + getRecordValue)))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayRecords(dbName, "name")
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    deleteRecord = Proxima.db.deleteRecord(dbName, 1)
    if deleteRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Deleted record with ID 1 successfully.")))

    getRecords = Proxima.db.getRecords(dbName)
    if getRecords != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded records successfully.")))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayRecords(dbName, "name")
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    
    resetRecords = Proxima.db.resetRecords(dbName)
    if resetRecords then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Successfully reset test database.")))

    getRecords = Proxima.db.getRecords(dbName)
    if getRecords != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded records successfully.")))

    recordMap = {"name": "test_one", "value_list": [1, 2, 3]}
    addRecord = Proxima.db.addRecord(dbName, recordMap)
    if addRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Added record 1.")))

    recordMap = {"name": "test_two", "value_list": [1, 2, 3]}
    addRecord = Proxima.db.addRecord(dbName, recordMap)
    if addRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Added record 2.")))

    recordMap = {"name": "test_thr", "value_list": [1, 2, 3]}
    addRecord = Proxima.db.addRecord(dbName, recordMap)
    if addRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Added record 3.")))

    getRecords = Proxima.db.getRecords(dbName)
    if getRecords != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded records successfully.")))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayRecords(dbName, "name")
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    recordMap = {"name": "test_changed_two", "value_list": [1, 2, 3]}
    updateRecord = Proxima.db.updateRecord(dbName, 2, recordMap, "dateCreated")
    if updateRecord then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Updated record with ID 2 successfully.")))
    
    getRecords = Proxima.db.getRecords(dbName)
    if getRecords != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Loaded records successfully.")))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    Proxima.db.displayRecords(dbName, "name")
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    foundIndex = Proxima.db.searchRecords(dbName, "name", "test_changed_two")
    foundID = foundIndex + 1
    if foundIndex != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Found records successfully: INDEX:" + foundIndex + "|ID:" + foundID)))

    getRecordValue = Proxima.db.getRecordValue(dbName, foundID, "name")
    if getRecordValue != null then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Got record value: " + getRecordValue)))

    print(Proxima.io.addOutputEntry(Proxima.io.output.line))
    deleteDatabase = Proxima.db.deleteDatabase(dbName)
    if deleteDatabase then print(Proxima.io.addOutputEntry(Proxima.io.output.success("Successfully deleted test database.")))
    print(Proxima.io.addOutputEntry(Proxima.io.output.line))

    print(Proxima.io.addOutputEntry(Proxima.io.output.info("Test ended.")))
end function

Proxima.tests.test.sessions = function ()
    getActiveSessions = Proxima.sessions.getSessions()
    getSavedSessions = Proxima.sessions.getSessions(true)
    if getActiveSessions != null then
        print("Found active sessions.")
        print(getActiveSessions)
    else
        print("No active sessions found.")
    end if
    if getSavedSessions != null then
        if getSavedSessions.len > 0 then
            print("Found saved sessions.")
            print(getSavedSessions)
        else
            print("No saved sessions found.")
        end if
    end if

    createSession = Proxima.sessions.createSession(0, "192.168.0.3", get_router("192.168.0.3"))
    if typeof(createSession) == "number" then print("Created session number 1.")

    createSession = Proxima.sessions.createSession(1, "2.2.2.2", get_router("2.2.2.2"))
    if typeof(createSession) == "number" then print("Created session number 2.")

    createSession = Proxima.sessions.createSession(1, "4.4.4.4", get_router("3.3.3.3"))
    if typeof(createSession) == "number" then print("Created session number 3.")

    setSession = Proxima.sessions.setSession(2)
    if setSession then print("Set session ID 2.")

    Proxima.sessions.displaySessions()

    getSessionValue = Proxima.sessions.getSessionValue(Proxima.sessions.activeSession, "targetIP")
    print("Got value.")
    print(getSessionValue)

    setSessionValue = Proxima.sessions.setSessionValue(Proxima.sessions.activeSession, "targetIP", "5.5.5.5")
    if setSessionValue then print("Changed IP.")

    setSessionValue = Proxima.sessions.setSessionValue(Proxima.sessions.activeSession, "targetRouter", get_router("5.5.5.5"))
    if setSessionValue then print("Changed router.")

    getSessionValue = Proxima.sessions.getSessionValue(Proxima.sessions.activeSession, "targetIP")
    print("Got value.")
    print(getSessionValue)

    Proxima.sessions.displaySessions()

    saveSession = Proxima.sessions.saveSession(Proxima.sessions.activeSession)
    if saveSession then print("Session with ID " + Proxima.sessions.activeSession + " saved.")

    Proxima.sessions.displaySessions(true)

    getSessionValue = Proxima.sessions.getSessionValue(Proxima.sessions.activeSession, "payloadInjection")
    print("Got value.")
    print(getSessionValue)
end function